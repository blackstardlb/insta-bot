plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "org.liquibase.gradle" version "2.0.1"
    id 'com.google.cloud.tools.jib' version '1.8.0'
    id "com.dorongold.task-tree" version "1.4"
}

ext {
    micronautDataVersion = "1.0.0.M4"
    assertJVersion = "3.11.1"
    mapstructVersion = "1.3.1.Final"
    micronautVersion = "1.2.6"
}

version parent.version
group "nl.blackstardlb"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url 'https://jitpack.io' }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    // Micronaut
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut:micronaut-security"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"

    implementation "io.swagger.core.v3:swagger-annotations"
    implementation "io.micronaut:micronaut-security"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut.configuration:micronaut-jdbc-hikari"
    implementation "io.micronaut.configuration:micronaut-liquibase"
    implementation "io.micronaut:micronaut-http-server-netty"

    compileOnly "com.oracle.substratevm:svm"
    implementation "javax.annotation:javax.annotation-api"

    // Logging
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtimeOnly 'org.apache.logging.log4j:log4j-to-slf4j:2.12.1'

    // Data
    annotationProcessor "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"
    implementation "org.liquibase.ext:liquibase-hibernate5:3.8"
    implementation "io.micronaut.data:micronaut-data-hibernate-jpa:$micronautDataVersion", {
        exclude group: 'io.micronaut.configuration', module: 'micronaut-hibernate-jpa-spring'
    }
    runtime 'mysql:mysql-connector-java:8.0.18'
    liquibaseRuntime "io.micronaut.configuration:micronaut-hibernate-jpa:1.2.3"
    liquibaseRuntime "org.liquibase.ext:liquibase-hibernate5:3.8"
    liquibaseRuntime sourceSets.main.runtimeClasspath
    liquibaseRuntime sourceSets.main.output

    // Jsoup
    implementation 'org.jsoup:jsoup:1.12.1'

    // MapStruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Commons
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-io:1.3.2'

    // Javacord
    implementation 'org.javacord:javacord:3.0.4'

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "org.assertj:assertj-core:$assertJVersion"
    testImplementation 'org.mockito:mockito-core:3.1.0'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.1.RELEASE'

}

test.classpath += configurations.developmentOnly

mainClassName = "nl.blackstardlb.insta.bot.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

apply from: 'liquibase.gradle'
apply from: 'properties.gradle'

jib.to.image = 'docker.pkg.github.com/blackstardlb/insta-bot/insta-bot:' + project.version
